rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update: if isSuperAdmin();
      allow delete: if isSuperAdmin() && userId != request.auth.uid;
    }

    // Eleves collection
    match /eleves/{eleveId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Professeurs collection
    match /professeurs/{professeurId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Classes collection
    match /classes/{classeId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Paiements collection
    match /paiements/{paiementId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Depenses collection
    match /depenses/{depenseId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}